package io.github.finagle.example.petstore

import com.twitter.finatra.request._

/**
 * Represents a Category attribute for pets. This is the type of animal a pet is.
 * @param id The unique, autogenerated ID of this Category.
 * @param name The name of this Category.
 */
case class Category(id: Option[Long], name: String)

/**
 * Represents the current state of the Petstore and how many pets are currently of which [[Status]].
 */
case class Inventory(available: Int, pending: Int, adopted: Int)

/**
 * Represents an order to the petstore.
 * @param id The unique, autogenerated ID of the order. The user should never give an ID during Order creation.
 * @param petId The ID of the pet being ordered.
 * @param quantity The number of pets being ordered.
 * @param shipDate The date the order will be shipped by.
 * @param status The status of the order.
 * @param complete Whether the order has been fulfilled.
 */
case class Order(
  id: Option[Long],
  petId: Option[Long],
  quantity: Option[Long],
  shipDate: Option[String],
  status: Option[OrderStatus], //placed, approved, delivered
  complete: Option[Boolean]
  )

/**
 * Represents Pets in the Petstore. Each Pet has a unique ID that should not be known by
 * the user at the time of its creation.
 * @param id The pet's auto-generated, unique ID.
 * @param name (Required) The pet's name.
 * @param photoUrls (Required) A sequence of URLs that lead to uploaded photos of the pet.
 * @param category The type of pet (cat, dragon, fish, etc.)
 * @param tags Tags that describe this pet.
 * @param status (Available, Pending, or Adopted)
 */
case class Pet(
  id: Option[Long],
  name: String,
  photoUrls: Seq[String],
  category: Option[Category],
  tags: Option[Seq[Tag]],
  status: Option[Status] //available, pending, adopted
  )

/**
 * Represents a Tag for pets. Tags cannot be passed with user-made, IDs.
 * @param id The unique, autogenerated ID of this Tag.
 * @param name The name of this Tag.
 */
case class Tag(id: Option[Long], name: String)

/**
 * Represents a User in the system, who can interact with the petstore and purchase
 * available [[Pet]] objects.
 * @param id Unique, autogenerated ID of the User
 * @param username (Required)
 * @param password (Required)
 */
case class User(
  id: Option[Long],
  username: String,
  firstName: Option[String],
  lastName: Option[String],
  email: Option[String],
  password: String,
  phone: Option[String]
  )

/**
 * Controller case class for the ID of a User, Pet, or Order
 */
case class Id(@RouteParam id: Long)

/**
 * Controller case class that takes in a sequence of Strings representing pet statuses.
 * Used for the getPetsByStatus route.
 */
case class SeekStatus(@QueryParam status: String)

/**
 * Controller case class that takes in a sequence of Strings representing pet tags.
 * Used for the findPetsByTag route.
 */
case class SeekTags(@QueryParam tags: String)

/**
 * Controller case class for the updatePetNameStatus route.
 */
case class FormPostRequest(
  @RouteParam id: Long,
  @FormParam name: String,
  @FormParam status: String
  )

/**
 * Controller case class for the updateUser route.
 */
case class UpdateUser(
  @RouteParam user: String,
  id: Option[Long],
  username: String,
  firstName: Option[String],
  lastName: Option[String],
  email: Option[String],
  password: String,
  phone: Option[String]
  )

